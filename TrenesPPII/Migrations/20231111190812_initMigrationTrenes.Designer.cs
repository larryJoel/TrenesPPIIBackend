// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrenesPPII.data;

#nullable disable

namespace TrenesPPII.Migrations
{
    [DbContext(typeof(TrenesContext))]
    [Migration("20231111190812_initMigrationTrenes")]
    partial class initMigrationTrenes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrenesPPII.Models.Asiento", b =>
                {
                    b.Property<int>("IdAsiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_asiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsiento"));

                    b.Property<int?>("Disponible")
                        .HasColumnType("int")
                        .HasColumnName("disponible");

                    b.Property<int?>("IdViaje")
                        .HasColumnType("int")
                        .HasColumnName("id_viaje");

                    b.Property<int?>("NumeroAsiento")
                        .HasColumnType("int")
                        .HasColumnName("numero_asiento");

                    b.HasKey("IdAsiento")
                        .HasName("PK__Asientos__14864B67FFF7022E");

                    b.HasIndex("IdViaje");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("TrenesPPII.Models.Estacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Estacion", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MetodoPago", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EstadoTicket")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaCreate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEdit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaExpira")
                        .HasColumnType("datetime");

                    b.Property<int?>("MetodoPagoId")
                        .HasColumnType("int")
                        .HasColumnName("Metodo_Pago_Id");

                    b.Property<int?>("TipoTicketId")
                        .HasColumnType("int")
                        .HasColumnName("TipoTicket_Id");

                    b.Property<int?>("ViajeId")
                        .HasColumnType("int")
                        .HasColumnName("Viaje_Id");

                    b.HasKey("Id");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("TipoTicketId");

                    b.HasIndex("ViajeId");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.TipoTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Ticket", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.Trene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("cant_pasajeros")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Trenes__3214EC07B906F425");

                    b.ToTable("Trenes");
                });

            modelBuilder.Entity("TrenesPPII.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CP");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaEdit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaIni")
                        .HasColumnType("datetime");

                    b.Property<int?>("IrolId")
                        .HasColumnType("int")
                        .HasColumnName("IRol_Id");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NroDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TipoDocId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("TipoUsuario_Id");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.UsuarioTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("Ticket_Id");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_Id");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Usuario_Ticket", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Destino")
                        .HasColumnType("int")
                        .HasColumnName("destino");

                    b.Property<int>("Disponible")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HoraLlegada")
                        .HasColumnType("datetime")
                        .HasColumnName("Hora_llegada");

                    b.Property<DateTime?>("HoraSal")
                        .HasColumnType("datetime")
                        .HasColumnName("Hora_sal");

                    b.Property<int?>("Origen")
                        .HasColumnType("int");

                    b.Property<int?>("TrenId")
                        .HasColumnType("int")
                        .HasColumnName("Tren_Id");

                    b.HasKey("Id")
                        .HasName("PK__Viaje__3214EC07CB644CBB");

                    b.HasIndex("Destino");

                    b.HasIndex("Origen");

                    b.HasIndex("TrenId");

                    b.ToTable("Viaje", (string)null);
                });

            modelBuilder.Entity("TrenesPPII.Models.detalle_factura", b =>
                {
                    b.Property<int>("Id_detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_detalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdFacturaFactid_factura")
                        .HasColumnType("int");

                    b.Property<int?>("IdTicketFactId")
                        .HasColumnType("int");

                    b.Property<int>("Id_factura")
                        .HasColumnType("int");

                    b.Property<int>("Id_ticket")
                        .HasColumnType("int");

                    b.Property<double>("Precio_unitario")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.HasKey("Id_detalle");

                    b.HasIndex("IdFacturaFactid_factura");

                    b.HasIndex("IdTicketFactId");

                    b.ToTable("Detalle_Facturas");
                });

            modelBuilder.Entity("TrenesPPII.Models.factura", b =>
                {
                    b.Property<int>("id_factura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_factura"));

                    b.Property<int?>("IdClienteId")
                        .HasColumnType("int");

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_emision")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_factura");

                    b.HasIndex("IdClienteId");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("TrenesPPII.Models.Asiento", b =>
                {
                    b.HasOne("TrenesPPII.Models.Viaje", "IdViajeNavigation")
                        .WithMany("Asientos")
                        .HasForeignKey("IdViaje")
                        .HasConstraintName("FK_Asientos_Viaje");

                    b.Navigation("IdViajeNavigation");
                });

            modelBuilder.Entity("TrenesPPII.Models.Ticket", b =>
                {
                    b.HasOne("TrenesPPII.Models.MetodoPago", "MetodoPago")
                        .WithMany("Tickets")
                        .HasForeignKey("MetodoPagoId")
                        .HasConstraintName("FK_Ticket_MetodoPago");

                    b.HasOne("TrenesPPII.Models.TipoTicket", "TipoTicket")
                        .WithMany("Tickets")
                        .HasForeignKey("TipoTicketId")
                        .HasConstraintName("FK_Ticket_Tipo_Ticket");

                    b.HasOne("TrenesPPII.Models.Viaje", "Viaje")
                        .WithMany("Tickets")
                        .HasForeignKey("ViajeId")
                        .HasConstraintName("FK_Ticket_Viaje");

                    b.Navigation("MetodoPago");

                    b.Navigation("TipoTicket");

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("TrenesPPII.Models.Usuario", b =>
                {
                    b.HasOne("TrenesPPII.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .HasConstraintName("FK_Usuario_TipoUsuario");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("TrenesPPII.Models.UsuarioTicket", b =>
                {
                    b.HasOne("TrenesPPII.Models.Ticket", "Ticket")
                        .WithMany("UsuarioTickets")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK_Usuario_Ticket_Ticket");

                    b.HasOne("TrenesPPII.Models.Usuario", "Usuario")
                        .WithMany("UsuarioTickets")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Usuario_Ticket_Usuario");

                    b.Navigation("Ticket");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TrenesPPII.Models.Viaje", b =>
                {
                    b.HasOne("TrenesPPII.Models.Estacion", "DestinoNavigation")
                        .WithMany("ViajeDestinoNavigations")
                        .HasForeignKey("Destino")
                        .HasConstraintName("FK_Viaje_Estacion1");

                    b.HasOne("TrenesPPII.Models.Estacion", "OrigenNavigation")
                        .WithMany("ViajeOrigenNavigations")
                        .HasForeignKey("Origen")
                        .HasConstraintName("FK_Viaje_Estacion");

                    b.HasOne("TrenesPPII.Models.Trene", "Tren")
                        .WithMany("Viajes")
                        .HasForeignKey("TrenId")
                        .HasConstraintName("FK_Viaje_Trenes");

                    b.Navigation("DestinoNavigation");

                    b.Navigation("OrigenNavigation");

                    b.Navigation("Tren");
                });

            modelBuilder.Entity("TrenesPPII.Models.detalle_factura", b =>
                {
                    b.HasOne("TrenesPPII.Models.factura", "IdFacturaFact")
                        .WithMany()
                        .HasForeignKey("IdFacturaFactid_factura");

                    b.HasOne("TrenesPPII.Models.Ticket", "IdTicketFact")
                        .WithMany()
                        .HasForeignKey("IdTicketFactId");

                    b.Navigation("IdFacturaFact");

                    b.Navigation("IdTicketFact");
                });

            modelBuilder.Entity("TrenesPPII.Models.factura", b =>
                {
                    b.HasOne("TrenesPPII.Models.Usuario", "IdCliente")
                        .WithMany("facturaTickets")
                        .HasForeignKey("IdClienteId");

                    b.Navigation("IdCliente");
                });

            modelBuilder.Entity("TrenesPPII.Models.Estacion", b =>
                {
                    b.Navigation("ViajeDestinoNavigations");

                    b.Navigation("ViajeOrigenNavigations");
                });

            modelBuilder.Entity("TrenesPPII.Models.MetodoPago", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrenesPPII.Models.Ticket", b =>
                {
                    b.Navigation("UsuarioTickets");
                });

            modelBuilder.Entity("TrenesPPII.Models.TipoTicket", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrenesPPII.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TrenesPPII.Models.Trene", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("TrenesPPII.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioTickets");

                    b.Navigation("facturaTickets");
                });

            modelBuilder.Entity("TrenesPPII.Models.Viaje", b =>
                {
                    b.Navigation("Asientos");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
